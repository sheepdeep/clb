function numberCopy(data) {
    let _this = $(data.trigger);
    Swal.fire({
        title: "Thông báo",
        html: `Đã sao chép số điện thoại!<br><b>(${data.text} - ${_this.data("name")})</b><br>Vui lòng cược tối thiểu <b>${Intl.NumberFormat("en-US").format(_this.data("min"))}đ</b> và tối đa <b>${Intl.NumberFormat("en-US").format(_this.data("max"))}đ</b><br>Chúc bạn may mắn <i class="fa fa-heart text-red"></i>`,
        icon: "success",
        timer: 1e4
    }).then(() => Swal.fire("HÃY CHÚ Ý", "SỐ TRẢ THƯỞNG CHỈ DÙNG ĐỂ TRẢ THƯỞNG,\n KHÔNG ĐÁNH VÀO SỐ TRẢ THƯỞNG NHA!", "warning"))
}

function convertToSlug(text) {
    return text
        .toLowerCase() // Chuyển thành chữ thường
        .trim() // Loại bỏ khoảng trắng ở đầu và cuối
        .normalize("NFD") // Chuẩn hóa chuỗi, tách dấu ra khỏi ký tự
        .replace(/[\u0300-\u036f]/g, "") // Loại bỏ dấu tiếng Việt
        .replace(/[^a-z0-9 -]/g, "") // Loại bỏ ký tự đặc biệt
        .replace(/\s+/g, "-") // Thay khoảng trắng bằng dấu gạch ngang
        .replace(/-+/g, "-"); // Loại bỏ dấu gạch ngang thừa
}

function downloadQr(data) {
    let _this = $(data.trigger);

    let base64String = 'data:image/jpeg;base64,' + _this.data('base-text');
    let fileName = 'qr-' + convertToSlug(_this.data('name-text'));

    const parts = base64String.split(',');
    const mimeType = parts[0].match(/:(.*?);/)[1]; // Lấy MIME type, ví dụ: "image/png"
    const byteString = atob(parts[1]); // Giải mã chuỗi Base64 thành chuỗi nhị phân

    // Tạo mảng byte
    const byteNumbers = new Array(byteString.length);
    for (let i = 0; i < byteString.length; i++) {
        byteNumbers[i] = byteString.charCodeAt(i);
    }
    const byteArray = new Uint8Array(byteNumbers);

    // Tạo Blob từ mảng byte
    const blob = new Blob([byteArray], {type: mimeType});

    // Tạo URL đối tượng từ Blob
    const blobURL = URL.createObjectURL(blob);

    // Tạo liên kết tải xuống
    const link = document.createElement('a');
    link.href = blobURL;
    link.download = fileName;

    // Kích hoạt tải xuống
    link.click();

    // Giải phóng URL Blob
    URL.revokeObjectURL(blobURL);
}

function showQr(data) {
    $('#modalQr').modal('show');
    let _this = $(data.trigger);
    let qrData = _this.data('qr-text');

    let qrImg = 'data:image/jpeg;base64,' + qrData;

    $('#modalQr #qr').attr('src', qrImg);

}

function loadGame(err, response) {
    err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#list-game").html(""), response.data.map((data, index) => {
        $("#list-game").append(`<div style="padding: 5px"><button class="btn btn-${0 == index ? "primary" : "default"} games" data-name="${data.name}" data-description="${data.description}" data-type="${data.gameType}"><b>${data.name}</b></button></div>`)
    }))
}

function loadReward(err, response) {
    let dataGame = $(".games.btn-primary");
    err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#gameName").html(`Cách Chơi ${dataGame.data("name")}`), $("#gameNoti").html(dataGame.data("description")), $("#tableReward").html(""), response.data.map(data => {
        // const dropdown = document.getElementById('comment');
        // const option = document.createElement('option');
        // option.value = data.content; // Set the value attribute
        // option.textContent = `${data.content} [ ${data.numberTLS.join(' - ')} ]`; // Set the displayed text
        // dropdown.appendChild(option); // Append to the dropdown
        $('#listButtonBet').append(`<div class="col-md-6 col-xs-6 form-group"><button class="btn w-100 btn btn-primary" style="border-color: #f0e2af;" onclick="bet(${data.content},this)"><b>${data.content}</b></button></div>`);
        $("#tableReward").append(`<tr><td><b>${data.content}</b></td><td><span class="badge badge-info">${data.numberTLS.join('</span> - <span class="badge badge-info">')}</span></td><td><strong><span style="color: red;">x</span> ${data.amount}</strong></td></tr>`)
    }))
}

function loadPhone(err, response) {

    err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#tablePhone, #tableStatus").html(""), response.data.map(data => {
        "active" == data.status && (data.amountDay + 2 * data.betMax >= data.limitDay || data.amountMonth + 2 * data.betMax >= data.limitMonth || data.count + 10 >= data.number) && (data.status = "pendingStop")
        $('#accountNumber').html(data.accountNumber)
    }))
}

function loadHistory(err, response) {
    err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#tableHistory").html(""), response.data.map(data => {
        $("#tableHistory").append(`<tr><td>${data.time}</td><td>${data.phone}</td><td>${Intl.NumberFormat("en-US").format(data.amount)}</td><td>${Intl.NumberFormat("en-US").format(data.bonus)}</td><td>${data.gameName}</td><td><span class="badge badge-primary text-uppercase">${data.content}</span></td><td><span class="badge badge-success">Thắng</span></td></tr>`)
    }))
}

function loadMission(action, err, response) {
    "start" != action ? (err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), $("#checkMission button").prop("disabled", !1).html('<i class="fa fa-search"></i>'), $(".result-mission").remove(), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && $("#checkMission").prepend(`<div class="result-mission text-center"><div class="money-day badge badge-primary mb-3">${Intl.NumberFormat("en-US").format(response.data.count)} VNĐ</div></div>`)) : $("#checkMission button").prop("disabled", !0).html('<i class="fas fa-spinner text-white fa-spin" aria-hidden="true"></i>')
}

function loadMuster(err, response) {
    err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && response.data && ($("#muster-session").html(`#${response.data.code}`), $(".muster-count").html(Intl.NumberFormat("en-US").format(response.data.count)), $("#muster-winner").html(response.data.win), $("#muster-bonus").html(`${Intl.NumberFormat("en-US").format(response.data.bonus)}`), $(".muster-time").html(response.data.second))
}

function loadHistoryMuster(err, response) {
    err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#tableMuster").html(""), response.data.map(data => {
        $("#tableMuster").append(`<tr><td><span class="text-info">#${data.code}</span></td><td>${data.count}</td><td>${data.phone}</td><td>${Intl.NumberFormat("en-US").format(data.amount)}đ</td></tr>`)
    }))
}

function loadJackpot() {
    axios.get("../api/v2/jackpot/history").then(res => {
        let response = res.data;
        !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#tableJackpot").html(""), response.data.map(data => {
            $("#tableJackpot").append(`<tr><td>${data.time}</td><td>${data.phone}</td><td><span class="text-success">+ ${Intl.NumberFormat().format(data.amount)} đ</span></td></tr>`)
        }))
    }).catch(err => {
        Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning")
    })
}

function addMuster(action = "start", err, response) {
    "start" != action ? (err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), $("#addMuster button").prop("disabled", !1).html('<i class="fas fa-user-crown"></i>'), !err && Swal.fire("Thông Báo", response.message, response.success ? "success" : "error")) : $("#addMuster button").prop("disabled", !0).html('<i class="fas fa-spinner text-white fa-spin" aria-hidden="true"></i>')
}

function checkGift(action = "start", err, response) {
    "start" != action ? (err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), $("#checkGift button").prop("disabled", !1).html("Kiểm tra"), !err && Swal.fire("Thông Báo", response.message, response.success ? "success" : "error")) : $("#checkGift button").prop("disabled", !0).html('Đang xử lý <i class="fas fa-spinner text-white fa-spin" aria-hidden="true"></i>')
}

function bet(comment) {
    let amount = $('#soTienCuoc input[name="amount"]').val();

    axios.post(`../api/v2/bet`, {amount, comment}).then(res => {
        window.location.href = res.data.payUrl;
    }).catch(err => {
    })
}

function loadTransId(err, response) {
    if (err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success) {
        let status, refund, data = response.data;
        switch (data.status) {
            case"wait":
                status = '<span class="badge badge-primary">Đang xử lý</span>';
                break;
            case"done":
                status = '<span class="badge badge-success">Đã xử lý</span>';
                break;
            case"limitBet":
                refund = !0, status = '<span class="badge badge-danger">Sai hạn mức</span>';
                break;
            case"errorComment":
                refund = !0, status = '<span class="badge badge-danger">Sai nội dung</span>';
                break;
            case"limitRefund":
                status = '<span class="badge badge-danger">Giới hạn hoàn</span>';
                break;
            default:
                status = '<span class="badge badge-danger">Lỗi xử lý</span>'
        }
        $(".transId-refund").remove(), refund && $("#modalDetail .modal-footer").append(`<button class="btn btn-primary transId-refund" data-id="${data.transId}">Hoàn tiền</button>`), $("#detailTransId").html(`#${data.transId}`), $("#tableDetails").html(`<tr><td><b>Số điện thoại</b></td><td class="text-secondary">${data.phone}</td></tr><tr><td><b>Mã giao dịch</b></td><td class="text-info">${data.transId}</td></tr><tr><td><b>Trò chơi</b></td><td class="text-warning">${data.gameName ? data.gameName : "Không xác định"}</td></tr><tr><td><b>Tiền cược</b></td><td class="text-secondary">${Intl.NumberFormat("en-US").format(data.amount)}đ</td></tr><tr><td><b>Nội dung</b></td><td class="text-info">${data.comment}</td></tr><tr><td><b>Tiền thắng</b></td><td class="text-secondary">${Intl.NumberFormat("en-US").format(data.bonus)}đ</td></tr><tr><td><b>Kết quả</b></td><td>${"win" == data.result ? '<span class="badge badge-success">Thắng</span>' : "won" == data.result ? '<span class="badge badge-danger">Thua</span>' : '<span class="badge badge-warning">Không xác định</span>'}</td></tr><tr><td><b>Trạng thái</b></td><td>${status}</td></tr><tr><td><b>Thời gian</b></td><td>${data.time}</td></tr>`), $("#modalDetail").modal("show")
    }
}

function refundTransId(action = "start", err, response) {
    "start" != action ? ($("#modalDetail").modal("hide"), $("#modalDetail .transId-refund").remove(), err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !err && Swal.fire("Thông Báo", response.message, response.success ? "success" : "error")) : $("#modalDetail .transId-refund").prop("disabled", !0).html('Đang xử lý <i class="fas fa-spinner text-white fa-spin" aria-hidden="true"></i>')
}

function jackpotCheck(action = "start", err, response) {
    "start" != action && (err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#jackpot div.input-group-append").html(`<button class="btn btn-${0 == response.data.isJoin || -1 == response.data.isJoin ? 'primary" data-action="join">Tham gia' : 'danger" data-action="out">Hủy tham gia'}</button>`), 0 == response.data.isJoin ? !$(".jackpot-time").hasClass("d-none") && $(".jackpot-time").addClass("d-none") : $(".jackpot-time").hasClass("d-none") && $(".jackpot-time").removeClass("d-none"), 0 != response.data.isJoin && (1 == response.data.isJoin ? $(".jackpot-time").html(`Thời gian tham gia nổ hũ: <strong>${response.data.time}</strong>`) : $(".jackpot-time").html(`Thời gian hủy tham gia nổ hũ: <strong>${response.data.time}</strong>`))))
}

function jackpotAction(action = "start", err, response) {
    "start" != action ? (err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), $('#jackpot input[name="phone"]').val(""), $("#jackpot .input-group-append").html(""), !$(".jackpot-time").hasClass("d-none") && $(".jackpot-time").addClass("d-none"), !err && Swal.fire("Thông Báo", response.message, response.success ? "success" : "error")) : $("#jackpot button").html("Đang xử lý...").prop("disabled", !0)
}

$(document).ready((function (e) {
    $("#checkPhone button").on("click", (function (e) {
        let phone = $('#checkPhone input[name=phone]').val();
        localStorage.setItem('phone', phone);
        Swal.fire("Thông Báo", `Đăng ký số ${phone} thành công!`, "success");
    })),
        $("#betGame button").on("click", (function (e) {
            // let phone = localStorage.getItem('phone');
            // const dropdown = document.getElementById('comment');
            // let comment = dropdown.value;
            // let amount = parseInt($('#betGame input[name=amount]').val());
            // if (!phone) {
            //     $('#modalRegPhone').modal('show');
            // } else {
            //     axios.post("../api/v2/bet", {phone, comment, amount}).then(res => {
            //         const ress = res.data;
            //         if (ress.success) {
            //             window.location.href = ress.payUrl
            //         } else {
            //             Swal.fire("Thông Báo", ress.message, "error")
            //         }
            //     }).catch(err => {
            //         Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning")
            //     })
            // }
            let phone = parseInt($('#betGame input[name=phone]').val());
            axios.post("../api/v2/register", {phone}).then(res => {
                const ress = res.data;
                if (ress.success) {
                    Swal.fire("Thông Báo", ress.message, "success")
                } else {
                    Swal.fire("Thông Báo", ress.message, "error")
                }
            }).catch(err => {
                Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning")
            })
        })),
        typingEffect("#mainTitle", [$("#mainTitle").data("text")]), loadJackpot(), $("#checkByTrans button, #checkByPhone button").on("click", (function (e) {
        let id = $(this).parent().parent().parent().attr("id"), phone = $(`#${id} [name="phone"]`).val(),
            transId = $(`#${id} [name="transId"]`).val();
        $(`#${id} button`).prop("disabled", !0), $(`#${id} button`).html('<i class="fas fa-spinner text-white fa-spin" aria-hidden="true"></i>'), axios.post("../api/v2/checkTransId", {
            phone: phone,
            transId: transId
        }).then(res => {
            $(`#${id} button`).prop("disabled", !1), $(`#${id} button`).html('<i class="fa fa-search"></i>'), res.data.success || !res.data.data || phone ? $("#checkByPhone").addClass("d-none") && $("#checkByTrans").removeClass("d-none") && loadTransId(null, res.data) : $("#checkByTrans").addClass("d-none") && $("#checkByPhone").removeClass("d-none") && $('#checkByPhone [name="transId"]').val(transId)
        }).catch(err => {
            loadTransId(err, null)
        })
    })), $("body").on("click", "#jackpot button", (function (e) {
        let action = $("#jackpot button").attr("data-action"), phone = $('#jackpot input[name="phone"]').val();
        if (!action) return Swal.fire("Thông Báo", "Thiếu dữ liệu hoặc lỗi!", "warning");
        jackpotAction(), axios.post(`../api/v2/jackpot/${action}`, {phone: phone}).then(res => {
            jackpotAction(null, null, res.data)
        }).catch(err => {
            jackpotAction(null, err)
        })
    })), $("body").on("click", ".transId-refund", (function (e) {
        let transId = $("#detailTransId").text();
        if (!transId) return Swal.fire("Thông Báo", "Có lỗi xảy ra, hãy thử lại!", "warning");
        transId = transId.replace(/\D/g, ""), refundTransId(), axios.post("../api/v2/refundTransId", {transId: transId}).then(res => {
            refundTransId(null, null, res.data)
        }).catch(err => {
            refundTransId(null, err, null)
        })
    }))
}));