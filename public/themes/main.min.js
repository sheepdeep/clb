const clipboard = new ClipboardJS(".copy-text"), socket = io();
let i = 0, j = 0, isBackspacing = !1, isParagraph = !1, speedForward = 0, speedWait = 3e4, speedBetweenLines = 10,
    speedBackspace = 0, musterTime = setInterval(countDown, 1e3);

function typingEffect(element, textArray) {
    let h3 = $(element).children("h3"), h4 = $(element).children("h4");
    if (isBackspacing) {
        if (h3.text().length || h4.text().length) return h4.text().length ? h4.text(h4.text().substring(0, h4.text().length - 1)) : h4.removeClass("cursor") && h3.addClass("cursor") && h3.text(h3.text().substring(0, h3.text().length - 1)), void setTimeout(() => typingEffect(element, textArray), speedBackspace);
        isBackspacing = !1, i = 0, isParagraph = !1, j = (j + 1) % textArray.length, setTimeout(() => typingEffect(element, textArray), 50)
    } else if (i < textArray[j].length) {
        if ("|" == textArray[j].charAt(i)) return isParagraph = !0, h3.removeClass("cursor"), h4.addClass("cursor"), i++, void setTimeout(() => typingEffect(element, textArray), speedBetweenLines);
        isParagraph ? h4.text(h4.text() + textArray[j].charAt(i)) : h3.text(h3.text() + textArray[j].charAt(i)), i++, setTimeout(() => typingEffect(element, textArray), speedForward)
    } else i == textArray[j].length && (isBackspacing = !0, setTimeout(() => typingEffect(element, textArray), speedWait))
}

function getReward() {
    let gameType = $(".games.btn-primary").data("type");
    $('#listButtonBet').html('');
    // console.log(gameType);

    // const dropdown = document.getElementById('comment');
    // dropdown.innerHTML = "";
    axios.post("../api/v2/rewards", {gameType: gameType}).then(res => {
        loadReward(null, res.data)
    }).catch(err => {
        loadReward(err)
    })
}

function loadReward(err, response) {
    let dataGame = $(".games.btn-primary");
    err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#gameName").html(`Cách Chơi ${dataGame.data("name")}`), $("#gameNoti").html(dataGame.data("description")), $("#tableReward").html(""), response.data.map(data => {
        $('#listButtonBet').append(`<div class="col-md-6 col-xs-6 form-group"><button class="btn w-100 btn btn-primary" style="border-color: #f0e2af;" onclick="bet(${data.content},this)"><b>${data.content}</b></button></div>`);
        $("#tableReward").append(`<tr><td><b>${data.content}</b></td><td><span class="badge badge-info">${data.numberTLS.join('</span> - <span class="badge badge-info">')}</span></td><td><strong><span style="color: red;">x</span> ${data.amount}</strong></td></tr>`)
    }))
}

function getPhone() {
    axios.get("../api/v2/getPhone").then(res => {
        $('#alertPhone').html('');
        loadPhone(null, res.data)
    }).catch(err => {
        loadPhone(err)
    })
}

function bet(comment) {
    let amount = $('#soTienCuoc input[name="amount"]').val();

    axios.post(`../api/v2/bet`, {amount, comment}).then(res => {
        window.location.href = res.data.payUrl;
    }).catch(err => {
    })
}

function getHistory() {
    axios.get("../api/v2/history").then(res => {
        loadHistory(null, res.data)
    }).catch(err => {
        loadHistory(err)
    })
}

function loadHistory(err, response) {
    err && Swal.fire("Thông Báo", `Có lỗi xảy ra ${err.message}`, "warning"), !response.success && Swal.fire("Thông Báo", response.message, "error"), response.success && ($("#tableHistory").html(""), response.data.map(data => {
        $("#tableHistory").append(`<tr><td>${data.time}</td><td>${data.phone}</td><td>${Intl.NumberFormat("en-US").format(data.amount)}</td><td>${Intl.NumberFormat("en-US").format(data.bonus)}</td><td>${data.gameName}</td><td><span class="badge badge-primary text-uppercase">${data.content}</span></td><td><span class="badge badge-success">Thắng</span></td></tr>`)
    }))
}

function getMuster() {
    axios.get("../api/v2/muster/session").then(res => {
        loadMuster(null, res.data)
    }).catch(err => {
        loadMuster(err)
    })
}

function getHistoryMuster() {
    axios.get("../api/v2/muster/history").then(res => {
        loadHistoryMuster(null, res.data)
    }).catch(err => {
        loadHistoryMuster(err)
    })
}

function countDown() {
    let second = $(".muster-time").html();
    if (second < 1) return clearInterval(musterTime) && $(".muster-time").html(0);
    $(".muster-time").html(second - 1)
}

function convertCurrency(number) {
    return number > 999 && number < 1e6 ? number / 1e3 + "K" : number >= 1e6 ? number / 1e6 + "M" : Intl.NumberFormat().format(number)
}

function animate(element, value, speed = 200) {
    const data = Number($(element).text().replace(/,/g, "")), time = value / speed;
    data < value ? ($(element).html(Intl.NumberFormat("en-US").format(Math.ceil(data + time))), setTimeout(() => animate(element, value), 1)) : $(element).html(Intl.NumberFormat("en-US").format(value))
}

clipboard.on("success", e => numberCopy(e)), $(document).ready((function () {
    localStorage.getItem("notification") ? Date.now() >= localStorage.getItem("notification") && localStorage.clear("notification") : $("#notiModal").modal("show"), setInterval(getPhone, 18e4), getPhone(), getHistory(), getMuster(), getHistoryMuster(), getReward(), socket.on("musterData", data => {
        data && (loadMuster(null, {
            success: !0,
            data: data
        }), clearInterval(musterTime), musterTime = setInterval(countDown, 1e3))
    }), socket.on("jackpotCount", data => {
        $(".jackpot-amount>span").html(0), animate(".jackpot-amount>span", data)
    }), socket.on("historyData", data => {
        data && loadHistory(null, {success: !0, data: data})
    }), socket.on("phoneData", data => {
        data && loadPhone(null, {success: !0, data: data})
    }), socket.on("gameData", data => {
        data && loadGame(null, {success: !0, data: data})
    }), socket.on("rewardData", data => {
        let gameType;
        data == $(".games.btn-primary").data("type") && loadReward(null, {success: !0, data: data})
    }), socket.on("historyMuster", data => {
        data && loadHistoryMuster(null, {success: !0, data: data})
    }), socket.on("notiWin", data => {
        new Notify({
            status: "success",
            title: `Trò chơi: ${data.gameName}`,
            text: `Chúc mừng <b>${data.phone}</b> đã thắng ${Intl.NumberFormat("en-US").format(data.amount)} VNĐ`,
            autoclose: !0,
            autotimeout: 3500,
            customIcon: iconNotify
        })
    }), $("body").on("click", "#closeNoti", e => localStorage.setItem("notification", Date.now() + 36e5)), $("body").on("click", ".games", (function (e) {
        let _this = $(this);
        _this.removeClass("btn-default"), $(".games.btn-primary").removeClass("btn-primary").addClass("btn-default"), _this.addClass("btn-primary"), !_this.data("game") && getReward()
    })), $("body").on("click", "#checkMission button", (function (e) {
        let phone = $('#checkMission input[name="phone"]').val();
        loadMission("start"), axios.post("../api/v2/checkMission", {phone: phone}).then(res => {
            loadMission(null, null, res.data)
        }).catch(err => {
            loadMission(null, err, null)
        })
    })), $("body").on("click", "#addMuster button", (function (e) {
        let phone = $('#addMuster input[name="phone"]').val();
        addMuster(), axios.post("../api/v2/muster/add", {phone: phone}).then(res => {
            addMuster(null, null, res.data)
        }).catch(err => {
            addMuster(null, err, null)
        })
    })), $("body").on("click", "#checkGift button", (function (e) {
        let phone = $('#checkGift input[name="phone"]').val(), code = $('#checkGift input[name="code"]').val();
        checkGift(), axios.post("../api/v2/checkGift", {phone: phone, code: code}).then(res => {
            checkGift(null, null, res.data)
        }).catch(err => {
            checkGift(null, err, null)
        })
    })), $("body").on("change", '#jackpot input[name="phone"]', (function (e) {
        let phone = $('#jackpot input[name="phone"]').val();
        jackpotCheck(), axios.post("../api/v2/jackpot/checkJoin", {phone: phone}).then(res => {
            jackpotCheck(null, null, res.data)
        }).catch(err => {
            jackpotCheck(null, err)
        })
    }))
}));